<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   closing="closeWindowHandler(event)"
					   creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.macro.gUI.editor.ComponentsPanel;
			import com.macro.gUI.editor.Inspector;
			import com.macro.gUI.editor.SkinEditor;
			import com.macro.gUI.editor.TreePanel;
			
			import mx.collections.*;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;

			public var gUIRoot:Sprite;
			
			private var _uiContainer:UIComponent;

			private var _skinEditor:SkinEditor;

			private var _componentsPanel:ComponentsPanel;

			private var _treePanel:TreePanel;

			private var _inspector:Inspector;

			protected function menuItemClickHandler(e:MenuEvent):void
			{
				var key:String = e.item.@data;
				switch (key)
				{
					case "exit":
					{
						this.exit();
						break;
					}
					case "skins":
					{
						if (_skinEditor == null || _skinEditor.closed)
						{
							_skinEditor = new SkinEditor();
							_skinEditor.open();
						}
						_skinEditor.orderToFront();
						break;
					}
					case "component":
					{
						PopUpManager.addPopUp(_componentsPanel, this);
						break;
					}
					case "tree":
					{
						PopUpManager.addPopUp(_treePanel, this);
						break;
					}
					case "properties":
					{
						PopUpManager.addPopUp(_inspector, this);
						break;
					}
					case "layout":
					{
						resetPanelLayout();
						break;
					}
				}
			}

			protected function creationCompleteHandler(e:FlexEvent):void
			{
				_uiContainer = new UIComponent();
				_uiContainer.x = 0;
				_uiContainer.y = 30;
				_uiContainer.percentWidth = 100;
				_uiContainer.percentHeight = 100;

				gUIRoot = new Sprite();
				_uiContainer.addChild(gUIRoot);

				_uiContainer.addEventListener(ResizeEvent.RESIZE, onResizeHandler);
				this.addElement(_uiContainer);

				resetPanelLayout();
			}

			private function resetPanelLayout():void
			{
				var t:int = 40;
				var b:int = 40;
				var gap:int = 10;
				var w:int = 300;
				var h:int = 150;

				// 总高度 - 顶部留空 - 底部留空 - 间距
				var ph:int = (this.height - t - b - gap) >> 1;

				// 组件面板
				if (_componentsPanel == null)
					_componentsPanel = new ComponentsPanel();
				_componentsPanel.width = w;
				_componentsPanel.height = ph;
				_componentsPanel.x = this.width - _componentsPanel.width - gap;
				_componentsPanel.y = t;
				PopUpManager.addPopUp(_componentsPanel, this);

				// 大纲面板
				if (_treePanel == null)
					_treePanel = new TreePanel();
				_treePanel.width = w;
				_treePanel.height = ph;
				_treePanel.x = _componentsPanel.x;
				_treePanel.y = _componentsPanel.y + _componentsPanel.height + gap;
				PopUpManager.addPopUp(_treePanel, this);

				// 初始化属性面板
				if (_inspector == null)
					_inspector = new Inspector();
				_inspector.width = _componentsPanel.x - gap * 2;
				_inspector.height = h;
				_inspector.x = gap;
				_inspector.y = this.height - _inspector.height - b;
				PopUpManager.addPopUp(_inspector, this);
			}

			protected function onResizeHandler(e:ResizeEvent):void
			{
				gUIRoot.graphics.clear();
				gUIRoot.graphics.beginFill(0x70b2ee);
				gUIRoot.graphics.drawRect(0, 0, e.target.width, e.target.height);
			}
			
			protected function closeWindowHandler(e:Event):void
			{
//				e.preventDefault();
			}
		]]>
	</fx:Script>

	<mx:MenuBar id="topMenuBar" width="100%" height="30" itemClick="menuItemClickHandler(event)"
				labelField="@label">
		<fx:XMLList>
			<menuitem label="文件">
				<menuitem label="新建" data="create"/>
				<menuitem label="保存" data="save"/>
				<menuitem label="导出AS" data="export"/>
				<menuitem type="separator"/>
				<menuitem label="退出" data="exit"/>
			</menuitem>
			<menuitem label="查看">
				<menuitem label="组件面板" data="component"/>
				<menuitem label="大纲面板" data="tree"/>
				<menuitem label="属性面板" data="properties"/>
				<menuitem type="separator"/>
				<menuitem label="皮肤管理器" data="skins"/>
				<menuitem label="资源管理器" data="resources" enabled="false"/>
				<menuitem type="separator"/>
				<menuitem label="重置面板" data="layout"/>
			</menuitem>
			<menuitem label="关于">
				<menuitem label="帮助" data="help"/>
				<menuitem label="版本号：0.5.0"/>
			</menuitem>
		</fx:XMLList>
	</mx:MenuBar>

</s:WindowedApplication>
