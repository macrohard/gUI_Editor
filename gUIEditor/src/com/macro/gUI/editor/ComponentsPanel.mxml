<?xml version="1.0" encoding="utf-8"?>
<customComponents:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
									   xmlns:s="library://ns.adobe.com/flex/spark"
									   xmlns:mx="library://ns.adobe.com/flex/mx"
									   xmlns:flexponential="com.flexponential.*"
									   xmlns:customComponents="com.macro.gUI.editor.customComponents.*"
									   width="300" height="280" close="closeHandler();"
									   creationComplete="creationCompleteHandler()"
									   resize="resizeHandler(event)" title="组件"
									   windowMove="windowMoveHandler();">
	<fx:Script>
		<![CDATA[
			import com.macro.gUI.editor.project.CompConfiguration;
			
			import mx.collections.XMLListCollection;
			import mx.controls.treeClasses.TreeItemRenderer;
			import mx.core.DragSource;
			import mx.core.UIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.managers.DragManager;
			import mx.managers.PopUpManager;
			
			import spark.components.Image;
			
			private var dragImage:Image;

			private function closeHandler():void
			{
				PopUpManager.removePopUp(this);
			}

			private function windowMoveHandler():void
			{
				if (this.x < 0)
				{
					this.x = 0;
				}
				if (this.y < 30)
				{
					this.y = 30;
				}

				if (this.x + this.width > this.parent.width)
				{
					this.x = this.parent.width - this.width;
				}
				if (this.y + this.height > this.parent.height)
				{
					this.y = this.parent.height - this.height;
				}
			}

			protected function creationCompleteHandler():void
			{
				tree.dataProvider = new XMLListCollection(CompConfiguration.configXML);
				tree.validateNow();
				tree.expandChildrenOf(CompConfiguration.configXML[0], true);
				tree.expandChildrenOf(CompConfiguration.configXML[1], true);
				tree.expandChildrenOf(CompConfiguration.configXML[2], true);
				
				tree.setStyle("disclosureClosedIcon", null);
				tree.setStyle("disclosureOpenIcon", null);
				tree.setStyle("paddingLeft", 5);
				
				dragImage = new Image();
				var s:Shape = new Shape();
				s.graphics.beginFill(0);
				s.graphics.drawRect(0, 0, 80, 80);
				dragImage.source = s;
			}

			protected function resizeHandler(e:ResizeEvent):void
			{
				tree.width = e.target.width;
				tree.height = e.target.height - 48;
			}

			protected function mouseDownHandler(e:MouseEvent):void
			{
				if (!(e.target.parent is TreeItemRenderer))
					return;
				if (tree.selectedItem == null)
					return;
				
				var type:String = tree.selectedItem.@type;
				if (type != "Controls" && type != "Composites" && type != "Containers")
				{
					var dragChild:UIComponent = UIComponent(e.target.parent);

					var dragSource:DragSource = new DragSource();
					dragSource.addData(type, 'component');
					
					DragManager.doDrag(dragChild, dragSource, e, dragImage, dragChild.mouseX, dragChild.mouseY);
				}
			}
		]]>
	</fx:Script>
	<customComponents:controlBarContent/>
	<customComponents:NoAutoScrollTree id="tree" x="-1" y="-1" labelField="@type"
									   mouseDown="mouseDownHandler(event)"/>
</customComponents:ResizableTitleWindow>
