<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="800" height="600" creationComplete="creationCompleteHandler()"
		  showStatusBar="false" title="样式列表">
	<fx:Script>
		<![CDATA[
			import com.macro.gUI.assist.TextStyle;
			import com.macro.gUI.controls.Label;
			import com.macro.gUI.editor.project.ProjectManager;
			import com.macro.gUI.editor.project.StyleConfig;

			import mx.managers.PopUpManager;

			import spark.events.GridEvent;


			private static const testStr:String = "这是一段测试文本，样式效果依赖TextStyle的设置\n如果multiline为false则此行不可见";

			[Bindable]
			private var styles:ArrayList;


			protected function creationCompleteHandler():void
			{
				styles = new ArrayList();
				dataGrid.dataProvider = styles;

				var config:StyleConfig = ProjectManager.inst.styleConfig;
				for each (var xml:XML in config.configXML.item)
				{
					var data:Object = new Object();
					data.key = xml.@id.toString();
					data.font = xml.@font.toString();
					data.size = xml.@size.toString();
					data.color = xml.@color.toString();
					data.bold = xml.@bold.toString();
					data.italic = xml.@italic.toString();
					data.underline = xml.@underline.toString();
					data.align = xml.@align.toString();
					data.leftMargin = xml.@leftMargin.toString();
					data.rightMargin = xml.@rightMargin.toString();
					data.indent = xml.@indent.toString();
					data.blockIndent = xml.@blockIndent.toString();
					data.leading = xml.@leading.toString();
					data.kerning = xml.@kerning.toString();
					data.letterSpacing = xml.@letterSpacing.toString();
					data.multiline = xml.@multiline.toString();
					data.wordWrap = xml.@wordWrap.toString();
					data.maxChars = xml.@maxChars.toString();
					data.filters = xml.@filters.toString();

					data.image = getPreview(data);

					styles.addItem(data);
				}
			}


			private function getPreview(data:Object):BitmapData
			{
//				var filter:String = '[new GlowFilter(0x00ff00, 1, 2, 2, 16), ' + 
//					'new GradientGlowFilter(0, 45, [0xFFFFFF, 0xFF0000, 0xFFFF00, 0x00CCFF], [0, 1, 1, 1], [0, 63, 126, 255], 50, 50, 2.5, 3, "outer", false), ' + 
//					'new DropShadowFilter(5, 45, 0, 1, 2, 2, 0.5)]';

				var style:TextStyle = new TextStyle();
				if (data.font != "")
					style.font = data.font;
				if (data.size != "")
					style.size = data.size;
				if (data.color != "")
					style.color = data.color;
				if (data.bold != "")
					style.bold = data.bold == "true";
				if (data.italic != "")
					style.italic = data.italic == "true";
				if (data.underline != "")
					style.underline = data.underline == "true";
				if (data.align != "")
					style.align = data.align;
				if (data.leftMargin != "")
					style.leftMargin = data.leftMargin;
				if (data.rightMargin != "")
					style.rightMargin = data.rightMargin;
				if (data.indent != "")
					style.indent = data.indent;
				if (data.blockIndent != "")
					style.blockIndent = data.blockIndent;
				if (data.leading != "")
					style.leading = data.leading;
				if (data.kerning != "")
					style.kerning = data.kerning == "true";
				if (data.letterSpacing != "")
					style.letterSpacing = data.letterSpacing;

				style.multiline = data.multiline == "true";
				style.wordWrap = data.wordWrap == "true";
				style.maxChars = int(data.maxChars);
				if (data.filters != "")
					style.filters = FilterUtil.getFilters(data.filters);

				var label:Label = new Label(testStr);
				label.backgroundColor = 0xffcccccc;
				label.width = 200;
				label.style = style;
				return label.bitmapData;
			}


			protected function itemDoubleClickHandler(e:GridEvent):void
			{
				if (e.rowIndex != -1)
				{
					var w:StyleEditor = new StyleEditor();
					w.init(this, e.rowIndex, styles.getItemAt(e.rowIndex));
					PopUpManager.addPopUp(w, this);
					PopUpManager.centerPopUp(w);
				}
			}

			public function update(index:int, data:Object):void
			{
				data.image = getPreview(data);
				styles.setItemAt(data, index);

				ProjectManager.inst.styleConfig.setDefine(data.key, data.font, data.size, data.color, data.bold, data.italic,
														  data.underline, data.align, data.leftMargin, data.rightMargin, data.indent,
														  data.blockIndent, data.leading, data.kerning, data.letterSpacing, data.multiline,
														  data.wordWrap, data.maxChars, data.filters);
			}
		]]>
	</fx:Script>
	<s:DataGrid id="dataGrid" x="0" y="0" width="100%" height="100%" doubleClickEnabled="true"
				gridDoubleClick="itemDoubleClickHandler(event)" variableRowHeight="true">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="key" headerText="样式常量"/>
				<s:GridColumn headerText="预览" itemRenderer="com.macro.gUI.editor.style.PreviewCell"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
</s:Window>
